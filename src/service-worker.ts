import { clientsClaim } from 'workbox-core';
import { precacheAndRoute, createHandlerBoundToURL } from 'workbox-precaching';
import { registerRoute } from 'workbox-routing';
import { CacheFirst } from 'workbox-strategies';
import { ExpirationPlugin } from 'workbox-expiration';

declare const self: ServiceWorkerGlobalScope;

clientsClaim();
self.skipWaiting();

// Precache all assets generated by VitePWA
precacheAndRoute(self.__WB_MANIFEST);

// App Shell-style Routing
registerRoute(
  ({ request, url }) => {
    if (request.mode !== 'navigate') {
      return false;
    }

    if (url.pathname.startsWith('/_') || url.pathname.match(/\.\w+$/)) {
      return false;
    }

    return true;
  },
  createHandlerBoundToURL(process.env.PUBLIC_URL + '/index.html')
);

// Runtime Caching for WebP Images
registerRoute(
  ({ url }) => url.origin === self.location.origin && url.pathname.endsWith('.webp'),
  new CacheFirst({
    cacheName: 'webp-images',
    plugins: [
      new ExpirationPlugin({ maxEntries: 500 }), // Customize as needed
    ],
  })
);

self.addEventListener('message', (event) => {
  if (event.data && event.data.type === 'SKIP_WAITING') {
    self.skipWaiting();
  }
});

